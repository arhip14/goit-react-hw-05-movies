{"version":3,"file":"static/js/850.d3751d35.chunk.js","mappings":"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","sources":["components/SearchResults.jsx","components/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { searchMovies } from './api';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst SearchResultContainer = styled.div`\n  text-align: center;\n  background: linear-gradient(to bottom, #333, #000);\n  padding: 20px;\n  color: white;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  font-family: 'Arial', sans-serif;\n`;\n\nconst Title = styled.h2`\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: #fff;\n\n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n\n  @media (max-width: 576px) {\n    font-size: 18px;\n  }\n`;\n\nconst MovieContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  margin-top: 20px;\n`;\n\nconst MovieItem = styled.div`\n  width: calc(33.33% - 20px);\n  margin-bottom: 20px;\n  background-color: #f0f0f0;\n  padding: 10px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n  transition: transform 0.3s ease;\n  margin-right: 20px;\n\n  &:nth-child(3n) {\n    margin-right: 0;\n  }\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media (max-width: 768px) {\n    width: calc(50% - 20px);\n    margin-right: 0;\n\n    &:nth-child(2n) {\n      margin-right: 20px;\n    }\n  }\n\n  @media (max-width: 576px) {\n    width: 100%;\n    margin-right: 0;\n\n    &:nth-child(2n) {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst MovieImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nconst MovieTitle = styled.h3`\n  font-size: 20px;\n  font-weight: bold;\n  color: #0074d9;\n  text-transform: uppercase;\n`;\n\nconst HomeButton = styled.button`\n  padding: 10px 20px;\n  background-color: #0074d9;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-family: 'Arial', sans-serif;\n  text-decoration: none;\n  margin-top: 20px;\n  display: inline-block;\n\n  @media (max-width: 576px) {\n    padding: 8px 16px;\n    font-size: 16px;\n  }\n`;\n\nconst SearchResult = () => {\n  const location = useLocation();\n  const [searchResults, setSearchResults] = useState([]);\n  const searchQuery = new URLSearchParams(location.search).get('q');\n\n  useEffect(() => {\n    if (searchQuery) {\n      searchMovies(searchQuery)\n        .then((response) => {\n          setSearchResults(response);\n        })\n        .catch((error) => {\n          console.error('Помилка пошуку фільмів:', error);\n        });\n    }\n  }, [searchQuery]);\n\n  return (\n    <SearchResultContainer>\n      <Title>Результати пошуку фільмів</Title>\n      <Link to=\"/\" style={{ textDecoration: 'none' }}>\n        <HomeButton>На головну</HomeButton>\n      </Link>\n      <MovieContainer>\n        {searchResults && searchResults.length > 0\n          ? searchResults.map((movie) => (\n              <MovieItem key={movie.id}>\n                <Link to={`/movies/${movie.id}?q=${searchQuery}`}>\n                  <MovieImage\n                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    alt={movie.title}\n                  />\n                  <MovieTitle>{movie.title}</MovieTitle>\n                </Link>\n              </MovieItem>\n            ))\n          : null}\n      </MovieContainer>\n    </SearchResultContainer>\n  );\n};\n\nexport default SearchResult;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'f7ae4055ff38708d9955df5ca1f5f0c3';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\nexport const getMovieCredits = (movieId) => {\n  return api.get(`/movie/${movieId}/credits`);\n};\n\nexport const getTrendingMovies = () => {\n  return api.get('/trending/movie/week');\n};\n\nexport const searchMovies = async (query) => {\n  try {\n    if (!query) {\n      toast.error('Введіть текст для пошуку');\n      return [];\n    }\n    const response = await api.get('/search/movie', {\n      params: {\n        query,\n      },\n    });\n\n    const results = response.data.results;\n\n    if (results.length === 0) {\n      toast.info('Нічого не знайдено');\n      return [];\n    }\n\n    toast.success('Успішно знайдено');\n    return results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMoviesByLetter = async (letter) => {\n  try {\n    if (!letter) {\n      toast.error('Введіть літеру для пошуку');\n      return [];\n    }\n    const response = await api.get('/search/movie', {\n      params: {\n        query: letter,\n      },\n    });\n\n    const results = response.data.results;\n\n    if (results.length === 0) {\n      toast.info('Нічого не знайдено');\n      return [];\n    }\n\n    toast.success('Успішно знайдено');\n    return results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMoviesByTitle = async (title) => {\n  try {\n    if (!title) {\n      toast.error('Введіть назву для пошуку');\n      return [];\n    }\n    const response = await api.get('/search/movie', {\n      params: {\n        query: title,\n      },\n    });\n\n    const results = response.data.results;\n\n    if (results.length === 0) {\n      toast.info('Нічого не знайдено');\n      return [];\n    }\n\n    toast.success('Успішно знайдено');\n    return results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieDetails = (movieId) => {\n  return api.get(`/movie/${movieId}`);\n};\n\nexport const getMovieReviews = (movieId) => {\n  return api.get(`/movie/${movieId}/reviews`);\n};\n"],"names":["SearchResultContainer","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","MovieContainer","_templateObject3","MovieItem","_templateObject4","MovieImage","_templateObject5","MovieTitle","_templateObject6","HomeButton","_templateObject7","location","useLocation","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","searchQuery","URLSearchParams","search","get","useEffect","searchMovies","then","response","catch","error","console","_jsxs","children","_jsx","Link","to","style","textDecoration","length","map","movie","concat","id","src","poster_path","alt","title","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","api","axios","baseURL","params","api_key","getMovieCredits","movieId","getTrendingMovies","_ref","_asyncToGenerator","_callee","query","results","_context","toast","data","t0","_x","apply","arguments","getMovieDetails","getMovieReviews"],"sourceRoot":""}